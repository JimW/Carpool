// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.

admin_routes_path     = "<%= Rails.application.routes.url_helpers.admin_routes_path %>"
routes_path     = "<%= Rails.application.routes.url_helpers.routes_path %>"
app_path = "/calendar"
var working_week = moment('<%= @working_week%>', "YYYY MM DD");
var lastView;
var last_calendar_type;
var last_working_date;

FullcalendarEngine = {
  Form: {
    display: function(options) {
      // options = {}
      if (typeof(options) == 'undefined') { options = {} }
      FullcalendarEngine.Form.fetch(options)
    },
    render: function(options){

      $('#new_route').trigger('reset');
      var startTime = options['starttime'] || new Date(), endTime = options['endtime'] || new Date(startTime.getTime());
      // The above could create a date not in the calendar (like on a weekend, in certain cases !!! - just take out?)
      // if(startTime.getTime() == endTime.getTime()) { endTime.setMinutes(startTime.getMinutes() + 30); }
      $('#route_starts_at').val(startTime);
      $('#route_ends_at').val(endTime);
      $('#create_event_dialog').dialog({
        title: 'Create New Route',
        modal: true,
        width: 700,
        top: 220,
        height: $(window).height() - 220,
        close: function(event, ui) { $('#create_event_dialog').dialog('destroy') }
      });
    },
    fetch: function(options){
      $.ajax({
        type: 'get',
        dataType: 'script',
        async: true,
        cache: true, // Otherwise I get Unpermitted parameter: _ within - Processing by Admin::RoutesController#new as JS
        url: admin_routes_path + "/new",
        success: function(){ FullcalendarEngine.Form.render(options) },
      });
    },
    authenticity_token: function(){
      return($('meta[name="csrf-token"]').attr("content"))
    }
  },
  Events: {
    refetch_resources_and_scroll_to_event: function(){
      $.ajax({
        data: '', //event_id=' + event.id, //+ '&day_delta=' + event.end.format() + '&minute_delta=' + delta.minutes + '&authenticity_token=' + FullcalendarEngine.Form.authenticity_token(),
        dataType: 'script',
        type: 'get',
        url: admin_routes_path + "/refresh_calendar",
        error: function(xhr){
          alert(JSON.parse(xhr.responseText)["message"])
        }
      });
    },
    edit: function(event_id){
      $.ajax({
        url: admin_routes_path + "/" + event_id + "/edit",
        success: function(data) {
        }
      });
    },
    
    make_template: function(event_id){
      $.ajax({
        data: 'authenticity_token=' + FullcalendarEngine.Form.authenticity_token() + '&event_id=' + event_id + "&dup_as=make_template",
        type: 'post',
        // dataType: 'script',
        url: admin_routes_path + "/duplicate/",
        // url: admin_routes_path + "/make_template/",
        success: window.location.reload(true)
      });
    },
    make_instance: function(event_id){
      $.ajax({
        data: 'authenticity_token=' + FullcalendarEngine.Form.authenticity_token() + '&event_id=' + event_id + "&dup_as=make_instance",
        type: 'post',
        url: admin_routes_path + "/duplicate/",
        success: window.location.reload(true)
      });
    },
    // Should not be sending something like this to "duplicate", maybe update? sending &dup_as=instance_revert for now ...
    revert_to_template: function(event_id){
      $.ajax({
        data: 'authenticity_token=' + FullcalendarEngine.Form.authenticity_token() + '&event_id=' + event_id + "&update_type=instance_revert",
        type: 'post',
        url: admin_routes_path + "/update_via_event/",
        success: window.location.reload(true)
      });
    },
    make_special: function(event_id){
      $.ajax({
        data: 'authenticity_token=' + FullcalendarEngine.Form.authenticity_token() + '&event_id=' + event_id + "&dup_as=make_special",
        type: 'post',
        url: admin_routes_path + "/duplicate/",
        success: function(data) {
          success: window.location.reload(true)
          // refetch_events_and_close_dialog();
        }
      });
    },
    refetch_events_and_close_dialog: function() {
      // $('.calendar').fullCalendar('refetchEvents');
      $('.dialog:visible').dialog('destroy');
      // Cookies.set('last_calendar_type', "agendaWeek");
      FullcalendarEngine.Events.refetch_resources_and_scroll_to_event();
    },
    showPeriodAndFrequency: function(value){
      switch (value) {
        case 'Daily':
          $('#period').html('day');
          $('#frequency').show();
          break;
        case 'Weekly':
          $('#period').html('week');
          $('#frequency').show();
          break;
        case 'Monthly':
          $('#period').html('month');
          $('#frequency').show();
          break;
        case 'Yearly':
          $('#period').html('year');
          $('#frequency').show();
          break;
        default:
          $('#frequency').hide();
      }
    }
  },
  setTime: function(type, time) {
    var $year = $(type + '_1i'), $month = $(type + '_2i'), $day = $(type + '_3i'), $hour = $(type + '_4i'), $minute = $(type + '_5i')
    $year.val(time.getFullYear());
    $month.prop('selectedIndex', time.getMonth());
    $day.prop('selectedIndex', time.getDate() - 1);
    $hour.prop('selectedIndex', time.getHours());
    $minute.prop('selectedIndex', time.getMinutes());
  },
  displayEditScreen: function(event_id) {
    $('#event_desc_dialog').dialog({
      title: "Edit Route",
      modal: true,
      width: 400,
      close: function(event, ui) {
        $('#event_desc_dialog').html('');
        $('#event_desc_dialog').dialog('destroy')
      },
      open: function( event, ui ) {
        FullcalendarEngine.Events.edit(event_id);
      }
    });
  },
  app_path: function(){
    return (app_path || window.location.pathname.match(/\/(\w)+/)[0])
  }
}
